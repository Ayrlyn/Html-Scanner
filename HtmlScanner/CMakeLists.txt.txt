# Specify the minimum version of CMake required to build this project.
cmake_minimum_required(VERSION 3.12)

# Define the project name, version, and language.
project(FileKeywordScanner VERSION 1.0 LANGUAGES CXX)

# Set the C++ standard to C++17, which is required for std::filesystem.
# CMAKE_CXX_STANDARD_REQUIRED ensures that the compiler will use C++17.
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Add the executable target.
# This command tells CMake to create an executable named html-keyword-scanner"
# from the "main.cpp" source file.
add_executable(html-keyword-scanner HtmlScanner.cpp)

# On some older platforms/compilers, std::filesystem needs to be linked explicitly.
# For modern compilers like MSVC (on Windows) or GCC 9+, this is often not
# necessary as long as the C++ standard is set correctly. This line is here

# as a robust-by-default example.
# find_library(STD_FILESYSTEM_LIB stdc++fs)
# if(STD_FILESYSTEM_LIB)
#   target_link_libraries(keyword-scanner PRIVATE ${STD_FILESYSTEM_LIB})
# endif()

# Optional: Set the output directory for the final executable.
# By default, it goes into the build directory. This is usually fine.
# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})